@inherits LayoutComponentBase

<MudThemeProvider @ref="mudThemeProvider" @bind-IsDarkMode="isDarkMode" Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>
    <!-- AppBar -->
    <MudAppBar Elevation="0" Class="app-bar">
        <MudIconButton Icon="Icons.Material.Filled.Menu" 
                      Color="Color.Inherit" 
                      Edge="Edge.Start" 
                      OnClick="@DrawerToggle" />
        
        <MudText Typo="Typo.h6" Class="ml-3">MagicStock</MudText>
        
        <MudSpacer />
        
        <MudIconButton Icon="@themeIcon" 
                      Color="Color.Inherit" 
                      OnClick="@ToggleTheme" />
    </MudAppBar>

    <!-- Drawer -->
    <MudDrawer @bind-Open="drawerOpen" 
              ClipMode="DrawerClipMode.Always" 
              Elevation="1"
              Class="navigation-drawer">
        <div class="drawer-header">
            <MudText Typo="Typo.h6">ðŸ“Š MagicStock</MudText>
            <MudText Typo="Typo.caption">GestiÃ³n de Cartas MTG</MudText>
        </div>
        <NavMenu />
    </MudDrawer>

    <!-- Main Content -->
    <MudMainContent Class="main-content">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="py-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<style>
    .app-bar {
        background: var(--mud-palette-primary) !important;
    }

    .drawer-header {
        background: linear-gradient(135deg, var(--mud-palette-primary), var(--mud-palette-secondary));
        color: white;
        padding: 24px 16px;
    }

    .main-content {
        background: var(--mud-palette-background-grey);
        min-height: calc(100vh - 64px);
    }
</style>

@code {
    private bool drawerOpen = true;
    private bool isDarkMode = false;
    private MudThemeProvider? mudThemeProvider;
    
    private MudTheme currentTheme = new()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#512BD4",
            Secondary = "#FF6B6B",
            Success = "#2ECC71",
            Warning = "#F39C12",
            Error = "#E74C3C"
        }
    };

    private string themeIcon => isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode;

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    private void ToggleTheme()
    {
        isDarkMode = !isDarkMode;
        StateHasChanged();
    }
} 